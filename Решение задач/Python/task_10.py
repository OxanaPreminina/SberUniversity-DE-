''' 10. Статистика рейсов
Статус рейса может принимать одно из следующих значений:
1. Scheduled. Рейс доступен для бронирования. Это происходит за 30 дней до плановой даты вылета; до этого запись о рейсе не существует 
   в базе данных.
2. On Time. Рейс доступен для регистрации (за сутки до плановой даты вылета) и не задержан.
3. Delayed. Рейс доступен для регистрации (за сутки до плановой даты вылета), но задержан.
4. Departed. Самолет уже вылетел и находится в воздухе.
5. Arrived. Самолет прибыл в пункт назначения.
6. Cancelled. Рейс отменён.

Вам дан набор статусов для каждого из рейса. Необходимо посчитать статистику - сколько рейсов в каждом из статусов.

Формат входных данных:
На первой строчке записано натуральное число N. На последующих N строчках записаны данные об очередном рейсе.
Порядок полей в строчке: flight_id, status. Поле flight_id содержит идентификатор рейса - натуральное число.
Поле status содержит статус рейса - строка, одно из 6 значений. Все поля разделены одной запятой. В самих данных запятых нет.

Формат выходных данных:
6 строчек. На каждой строчке - целое число, соответвующее количеству рейсов со статусом с таким же номером.
То есть на первой строчке - количество рейсов со статусом Scheduled, на второй - со статусом On Time и т.д.

Пример входных данных:
3
103,Scheduled
432232,On Time
3051,Scheduled

Пример выходных данных:
2
1
0
0
0
0
'''



N = int(input())
cnt_1, cnt_2, cnt_3, cnt_4, cnt_5, cnt_6 = 0, 0, 0, 0, 0, 0
for i in range(N):
    list_input = input().split(',')
    flight_id = int(list_input[0])
    status = str(list_input[1])

    if status == 'Scheduled':
        cnt_1 += 1
    elif status == 'On Time':
        cnt_2 += 1
    elif status == 'Delayed':
        cnt_3 += 1
    elif status == 'Departed':
        cnt_4 += 1
    elif status == 'Arrived':
        cnt_5 += 1
    elif status == 'Cancelled':
        cnt_6 += 1

print(cnt_1, cnt_2, cnt_3, cnt_4, cnt_5, cnt_6, sep='\n')
